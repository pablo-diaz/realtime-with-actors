# https://hub.docker.com/_/rabbitmq

docker pull rabbitmq:3-management-alpine

docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 -p 5672:5672 rabbitmq:3-management-alpine

docker run -d --hostname my-rabbit --name some-rabbit -p 8080:15672 -p 5672:5672 -v $(pwd)/config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/conf.d/rabbitmq.conf:ro -v $(pwd)/config/rabbitmq/definitions.json:/etc/rabbitmq/conf.d/definitions.json:ro rabbitmq:3-management-alpine

docker exec -it some-rabbit /bin/bash

rabbitmq-plugins enable rabbitmq_management

docker container stop some-rabbit

docker container remove some-rabbit

# ----------------------------------------------------------------------------------------

# https://github.com/fanout/docker-pushpin
# docker pull fanout/pushpin:1.40.1

docker run -d --name pushpin -p 7999:7999 -p 5560-5563:5560-5563 -v $(pwd)/config/pushpin/routes:/etc/pushpin/routes fanout/pushpin:1.40.1

docker run --name pushpin -p 7999:7999 -p 5560-5563:5560-5563 -v $(pwd)/config/pushpin/:/etc/pushpin/ fanout/pushpin:1.40.1

docker exec -it pushpin /bin/bash

docker container stop pushpin

docker container remove pushpin

# ----------------------------------------------------------------------------------------

# https://hub.docker.com/_/influxdb

docker run -d --name myinfluxdb -v $(pwd)/volumes/myInfluxVolume:/var/lib/influxdb2 -p 8086:8086 influxdb:2.7.4

docker run -d --name myinfluxdb -p 8086:8086 -e DOCKER_INFLUXDB_INIT_MODE=setup -e DOCKER_INFLUXDB_INIT_USERNAME=guest -e DOCKER_INFLUXDB_INIT_PASSWORD=prueba2024 -e DOCKER_INFLUXDB_INIT_ORG=personal -e DOCKER_INFLUXDB_INIT_BUCKET=device-events-db -e DOCKER_INFLUXDB_INIT_ADMIN_TOKEN="EIKFDKIF1R4zs0KrvYpJPVoYiFJ4pJfvSuEjkvOf_kgDHOTuBml5R2TJXem3zEjQkJLZZ5BPYTO-clj2-e6pgQ==" -e DOCKER_INFLUXDB_INIT_RETENTION=1w influxdb:2.7.4

docker exec -it myinfluxdb /bin/bash

docker container stop myinfluxdb

docker container remove myinfluxdb

# ----------------------------------------------------------------------------------------

# https://hub.docker.com/_/telegraf

docker run -d --name mytelegraf -v $(pwd)/config/telegraf/rabbitmqfordeviceeventsqueue.conf:/etc/telegraf/telegraf.conf:ro telegraf:1.29

docker run -d --name mytelegraf -v $(pwd)/config/telegraf/dockerlogs.conf:/etc/telegraf/telegraf.conf:ro -v /var/run/docker.sock:/var/run/docker.sock telegraf:1.29

docker exec -it mytelegraf /bin/bash

docker container stop mytelegraf

docker container remove mytelegraf

# ----------------------------------------------------------------------------------------

# https://hub.docker.com/r/fluent/fluentd/

# ----------------------------------------------------------------------------------------

docker build -t eventpublisher:001 -f config/docker/event-publisher/dockerfile .

docker build -t devicestate:001 -f config/docker/device-state/dockerfile .

# ----------------------------------------------------------------------------------------

docker logs -f eventpublisher_container | grep -E 'state|temperature|location'

# ----------------------------------------------------------------------------------------

# http://localhost:7999/UserSubscription/toGeneralDeviceEventStream/

from(bucket: "device-events-db")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r["_measurement"] == "device-metric")
  |> filter(fn: (r) => r["_field"] == "temperature")
  |> filter(fn: (r) => r["device-id"] =~ /DevFor_tenDevices_2024-01-29T14:08:01/)
  //|> filter(fn: (r) => r["device-id"] =~ /0000000006/)
  //|> distinct(column: "_field")  
  //|> count(column: "_value")
