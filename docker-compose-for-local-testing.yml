services:
  brokerserver:
    container_name: broker_container
    image: "rabbitmq:3-management-alpine"
    hostname: "my-rabbit"
    volumes:
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/conf.d/rabbitmq.conf
      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/conf.d/definitions.json
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "127.0.0.1:8080:15672"
    networks:
      - backend_space

  timeseriesserver:
    container_name: timeseries_container
    image: "influxdb:2.7.4"
    env_file:
      - ./config/docker/influxdb/docker-env-vars
    ports:
      - "127.0.0.1:8086:8086"
    volumes:
      - ./config/docker/influxdb/create-bucket-to-measure-load-tests.sh:/docker-entrypoint-initdb.d/initi-script-01.sh:ro
    networks:
      - backend_space

  eventstoreserver:
    container_name: eventstore_container
    image: "docker.eventstore.com/eventstore/eventstoredb-ee:24.10"
    env_file:
      - ./config/docker/eventstore/docker-env-vars
    ports:
      - "127.0.0.1:2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
    networks:
      - backend_space
  
  pushnotificationsserver:
    container_name: pushnotifications_container
    image: "fanout/pushpin:1.40.1"
    volumes:
      - ./config/pushpin/routes:/etc/pushpin/routes
    networks:
      - backend_space

  eventpublisherserver:
    container_name: eventpublisher_container
    image: "eventpublisher:001"
    env_file:
      - ./config/docker/event-publisher/docker-env-vars
    depends_on:
      brokerserver:
        condition: service_healthy
    networks:
      - backend_space
  
  devicestateserver:
    container_name: devicestate_container
    image: "devicestate:002"
    env_file:
      - ./config/docker/device-state/docker-env-vars
    depends_on:
      brokerserver:
        condition: service_healthy
    networks:
      - backend_space

  webserver:
    container_name: webserver_container
    image: "nginx:1.25.2"
    volumes:
      - ./config/nginx/nginx.without.tls.conf:/etc/nginx/conf.d/default.conf
      - ./config/nginx/scenario1.conf:/etc/nginx/nginx.conf
    ports:
      - "81:80"
    depends_on:
      eventpublisherserver:
        condition: service_started
      devicestateserver:
        condition: service_started
      pushnotificationsserver:
        condition: service_started
    sysctls:
      - net.ipv4.ip_local_port_range=10240 65535
    networks: 
      - backend_space

networks:
  backend_space:
    name: backend_network
    driver: bridge
    
volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
